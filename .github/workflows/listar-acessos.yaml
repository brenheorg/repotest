name: Listar acessos por time e gerar XLSX

on:
  workflow_dispatch:

jobs:
  listar-acessos:
    runs-on: ubuntu-latest
    env:
      ORG: brenheorg
      GH_TOKEN: ${{ secrets.GH_PAT }}

    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: Instalar GitHub CLI e jq
        run: |
          sudo apt-get update
          sudo apt-get install -y gh jq python3 python3-pip

      - name: Gerar CSV de acessos
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
          ORG: brenheorg
        run: |
          echo "Repositorio,Time,Permissao" > acessos_por_time.csv
          repos=$(gh repo list "$ORG" --limit 1000 --json name -q '.[].name')
          for repo in $repos; do
            echo "üîç Verificando: $repo"
            json=$(gh api "/orgs/$ORG/repos/$repo/teams")
            if [ "$json" != "[]" ]; then
              echo "$json" | jq -r --arg repo "$repo" '.[] | "\($repo),\(.name),\(.permission)"' >> acessos_por_time.csv
            fi
          done

      - name: Listar arquivos e mostrar CSV (debug)
        run: |
          ls -l acessos_por_time.csv
          head -n 10 acessos_por_time.csv || echo "Arquivo n√£o encontrado"

      - name: Instalar depend√™ncias Python
        run: pip3 install pandas openpyxl

      - name: Converter CSV para XLSX com verifica√ß√£o
        run: |
          python3 -c "
              import os
              import pandas as pd

              file_path = 'acessos_por_time.csv'
              
              if os.path.exists(file_path) and os.path.getsize(file_path) > 0:
                  df = pd.read_csv(file_path)
                  df.to_excel('acessos_por_time.xlsx', index=False)
              else:
                  print(f'Arquivo {file_path} n√£o existe ou est√° vazio.')
                  exit(1)
              "

      - name: Publicar arquivo XLSX como artefato
        uses: actions/upload-artifact@v4
        with:
          name: acessos-times-xlsx
          path: acessos_por_time.xlsx
